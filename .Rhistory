getwd()
#setwd("C:/Users/jack.werner1/Documents/Music/src")
setwd("/Users/jackwerner/Documents/My Stuff/Music/pianolytics")
source("C:/Users/jack.werner1/Documents/Music/src/music_functions.R")
source("music_functions.R")
# Mary Had a Little Lamb
note_string <- "EDCDEEEDDDEGGEDCDEEEEDDEDC"
note_vec <- strsplit(note_string, "")[[1]]
note_df <- table(note_vec) %>% data.frame()
keyboard_color_plot(note_df$note_vec, note_df$Freq, highkey = "B1")
floor(12/12)
floor(13/12)
floor(23/12)
floor(24/12)
help(gsub)
key <- "F1"
note <- gsub("[0-9]+", "", key)
note
octave_num <- gsub("[A_Za-z]", "", key) %>% as.numeric()
gsub("[A_Za-z]", "", key)
key
octave_num <- gsub("[A_Z]", "", key) %>% as.numeric()
octave_num <- gsub("[A-Z]", "", key) %>% as.numeric()
octave_num
halfsteps = 20
octaves <- floor(halfsteps/12)
octaves
leftover <- halfsteps %% 12
leftover
floor(-1.5)
help(floor)
key
halfsteps
up
up <- T
up
notes <- c("C", "C#/Db", "D", "D#/Eb", "E", "F",
"F#/Gb", "G", "G#/Ab", "A", "A#/Bb", "B")
note <- gsub("[0-9]+", "", key)
octave_num <- gsub("[A-Z]", "", key) %>% as.numeric()
octaves <- floor(halfsteps/12)
leftover <- halfsteps %% 12
which(notes == note)
which(notes == note) + leftover
transpose_keys <- function(key, halfsteps, up = TRUE) {
notes <- c("C", "C#/Db", "D", "D#/Eb", "E", "F",
"F#/Gb", "G", "G#/Ab", "A", "A#/Bb", "B")
note <- gsub("[0-9]+", "", key)
octave_num <- gsub("[A-Z]", "", key) %>% as.numeric()
octaves <- floor(halfsteps/12)
leftover <- halfsteps %% 12
if (up) carryover <- (which(notes == note) + leftover) > 12
else carryover <- (which(notes == note) - leftover) < 1
octave_change <- (octaves + carryover)
if (!up) octave_change <- -1*octave_change
newkey <- paste0(
transpose_notes(note = note, halfsteps = halfsteps, up = up),
octave_num + octave_change
)
return(newkey)
}
transpose_keys("C1", 4)
transpose_keys("C1", 16)
transpose_keys("C1", 16, up = FALSE)
notes <- LETTERS[c(3:7, 1:2)]
num_string <- "712323653216134565313271232365321671234321215671776565315671776532555322161531712365321611"
num_vec <- strsplit(num_string, "")[[1]] %>% as.numeric()
note_vec <- sapply(num_vec, function(x){notes[x]})
octave_string <- c("122222222221222222222212222222222112222222222223222222222223222222222333323222122222222122")
octave_vec <- num_vec <- strsplit(octave_string, "")[[1]]
key_vec <- paste0(note_vec, octave_vec)
key_vec
key_vec <- sapply(key_vec, transpose_keys, halfsteps = 2)
key_vec
key_df <- table(key_vec) %>% data.frame()
keyboard_color_plot(key_df$key_vec, key_df$Freq, lowkey = "C1", highkey = "C4")
keyboard_color_plot(key_df$key_vec, key_df$Freq, lowkey = "C1", highkey = "C4", highcolor = "blue")
keyboard_color_plot(key_df$key_vec, key_df$Freq, lowkey = "C1", highkey = "C4", high_color = "blue")
keyboard_color_plot(key_df$key_vec, key_df$Freq, lowkey = "C1", highkey = "C4", high_color = "blue", low_color = "red")
keyboard_color_plot(key_df$key_vec, key_df$Freq, lowkey = "C1", highkey = "C4", high_color = "red", low_color = "blue")
# Plots a keyboard with key colors based on given frequencies
keyboard_color_plot <- function(colored_keys = c("C1", "D1", "G1", "B1"),
color_weights = rep(1, length(colored_keys)),
lowkey = "C1", highkey = "C2",
low_color = "white", high_color = "red",
white_key_height = 150, white_key_width = 23.5,
black_key_height = 90, black_key_width = 13.7,
background_color = "white") {
keys <- keyboard_df(lowkey = lowkey, highkey = highkey,
white_key_height = white_key_height, white_key_width = white_key_width,
black_key_height = black_key_height, black_key_width = black_key_width)
if (all(grepl("[0-9]", colored_keys))) {
colors <- data.frame(key = colored_keys, color = color_weights, stringsAsFactors = F)
suppressWarnings(
keys_colors <- keys %>% left_join(colors, by = "key") %>%
mutate(color = ifelse(is.na(color), 0, color))
)
} else if (all(!grepl("[0-9]", colored_keys))) {
colors <- data.frame(note = colored_keys, color = color_weights, stringsAsFactors = F)
suppressWarnings(
keys_colors <- keys %>% left_join(colors, by = "note") %>%
mutate(color = ifelse(is.na(color), 0, color))
)
} else {
stop("Mixed note types")
}
suppressWarnings(
out <- ggplot(data = keys_colors) +
geom_tile(aes(x = cx, y = cy, width = w, height = h, fill = color), color = "black") +
coord_fixed() +
scale_fill_gradient(low = low_color, high = high_color) +
theme_void() +
theme(legend.position = "none",
plot.background = element_rect(fill = background_color),
panel.background = element_rect(fill = background_color),
)
)
return(out)
}
keyboard_color_plot(key_df$key_vec, key_df$Freq, lowkey = "C1", highkey = "C4")
keyboard_color_plot(key_df$key_vec, key_df$Freq, lowkey = "C1", highkey = "C4", background_color = "black")
# Plots a keyboard with key colors based on given frequencies
keyboard_color_plot <- function(colored_keys = c("C1", "D1", "G1", "B1"),
color_weights = rep(1, length(colored_keys)),
lowkey = "C1", highkey = "C2",
low_color = "white", high_color = "red",
white_key_height = 150, white_key_width = 23.5,
black_key_height = 90, black_key_width = 13.7,
background_color = "black",
background_color_2 = "blue") {
keys <- keyboard_df(lowkey = lowkey, highkey = highkey,
white_key_height = white_key_height, white_key_width = white_key_width,
black_key_height = black_key_height, black_key_width = black_key_width)
if (all(grepl("[0-9]", colored_keys))) {
colors <- data.frame(key = colored_keys, color = color_weights, stringsAsFactors = F)
suppressWarnings(
keys_colors <- keys %>% left_join(colors, by = "key") %>%
mutate(color = ifelse(is.na(color), 0, color))
)
} else if (all(!grepl("[0-9]", colored_keys))) {
colors <- data.frame(note = colored_keys, color = color_weights, stringsAsFactors = F)
suppressWarnings(
keys_colors <- keys %>% left_join(colors, by = "note") %>%
mutate(color = ifelse(is.na(color), 0, color))
)
} else {
stop("Mixed note types")
}
suppressWarnings(
out <- ggplot(data = keys_colors) +
geom_tile(aes(x = cx, y = cy, width = w, height = h, fill = color), color = "black") +
coord_fixed() +
scale_fill_gradient(low = low_color, high = high_color) +
theme_void() +
theme(legend.position = "none",
plot.background = element_rect(fill = background_color_2),
panel.background = element_rect(fill = background_color),
)
)
return(out)
}
keyboard_color_plot(key_df$key_vec, key_df$Freq, lowkey = "C1", highkey = "C4")
# Plots a keyboard with key colors based on given frequencies
keyboard_color_plot <- function(colored_keys = c("C1", "D1", "G1", "B1"),
color_weights = rep(1, length(colored_keys)),
lowkey = "C1", highkey = "C2",
low_color = "white", high_color = "red",
white_key_height = 150, white_key_width = 23.5,
black_key_height = 90, black_key_width = 13.7,
background_color = "black") {
keys <- keyboard_df(lowkey = lowkey, highkey = highkey,
white_key_height = white_key_height, white_key_width = white_key_width,
black_key_height = black_key_height, black_key_width = black_key_width)
if (all(grepl("[0-9]", colored_keys))) {
colors <- data.frame(key = colored_keys, color = color_weights, stringsAsFactors = F)
suppressWarnings(
keys_colors <- keys %>% left_join(colors, by = "key") %>%
mutate(color = ifelse(is.na(color), 0, color))
)
} else if (all(!grepl("[0-9]", colored_keys))) {
colors <- data.frame(note = colored_keys, color = color_weights, stringsAsFactors = F)
suppressWarnings(
keys_colors <- keys %>% left_join(colors, by = "note") %>%
mutate(color = ifelse(is.na(color), 0, color))
)
} else {
stop("Mixed note types")
}
suppressWarnings(
out <- ggplot(data = keys_colors) +
geom_tile(aes(x = cx, y = cy, width = w, height = h, fill = color), color = "black") +
coord_fixed() +
scale_fill_gradient(low = low_color, high = high_color) +
theme_void() +
theme(legend.position = "none",
plot.background = element_rect(fill = background_color),
panel.background = element_rect(fill = background_color)
)
)
return(out)
}
# Plots a keyboard with key colors based on given frequencies
keyboard_color_plot <- function(colored_keys = c("C1", "D1", "G1", "B1"),
color_weights = rep(1, length(colored_keys)),
lowkey = "C1", highkey = "C2",
low_color = "white", high_color = "red",
white_key_height = 150, white_key_width = 23.5,
black_key_height = 90, black_key_width = 13.7,
background_color = "white") {
keys <- keyboard_df(lowkey = lowkey, highkey = highkey,
white_key_height = white_key_height, white_key_width = white_key_width,
black_key_height = black_key_height, black_key_width = black_key_width)
if (all(grepl("[0-9]", colored_keys))) {
colors <- data.frame(key = colored_keys, color = color_weights, stringsAsFactors = F)
suppressWarnings(
keys_colors <- keys %>% left_join(colors, by = "key") %>%
mutate(color = ifelse(is.na(color), 0, color))
)
} else if (all(!grepl("[0-9]", colored_keys))) {
colors <- data.frame(note = colored_keys, color = color_weights, stringsAsFactors = F)
suppressWarnings(
keys_colors <- keys %>% left_join(colors, by = "note") %>%
mutate(color = ifelse(is.na(color), 0, color))
)
} else {
stop("Mixed note types")
}
suppressWarnings(
out <- ggplot(data = keys_colors) +
geom_tile(aes(x = cx, y = cy, width = w, height = h, fill = color), color = "black") +
coord_fixed() +
scale_fill_gradient(low = low_color, high = high_color) +
theme_void() +
theme(legend.position = "none",
plot.background = element_rect(fill = background_color),
panel.background = element_rect(fill = background_color)
)
)
return(out)
}
keyboard_color_plot(key_df$key_vec, key_df$Freq, lowkey = "C1", highkey = "C4", background_color = "black")
key_df
keyboard_color_plot(key_df$key_vec, key_df$Freq, lowkey = "A1", highkey = "A3")
notes <- LETTERS[c(3:7, 1:2)]
num_string <- "712323653216134565313271232365321671234321215671776565315671776532555322161531712365321611"
num_vec <- strsplit(num_string, "")[[1]] %>% as.numeric()
note_vec <- sapply(num_vec, function(x){notes[x]})
octave_string <- c("122222222221222222222212222222222112222222222223222222222223222222222333323222122222222122")
octave_vec <- num_vec <- strsplit(octave_string, "")[[1]]
key_vec <- paste0(note_vec, octave_vec)
key_vec <- sapply(key_vec, transpose_keys, halfsteps = 2)
key_df <- table(key_vec) %>% data.frame()
keyboard_color_plot(key_df$key_vec, key_df$Freq, lowkey = "A1", highkey = "A3")
